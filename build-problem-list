#!/usr/bin/env bash
set -euo pipefail

echo \n"building problems.js..."

OUTFILE="problems.js"
TMPFILE="$(mktemp).js"

write(){ echo "$@" >> "$TMPFILE"; }

load_name(){ jq -r .meta.name "$1/problem.json"; }
load_category() { jq -r .meta.category "$1/problem.json"; }

is_enabled(){
  local name="$1"
  local category="$2"

  if [[ -f enabled-problems ]]; then
    grep -qx "$name" enabled-problems && return 0
    grep -qx "$category" enabled-problems && return 0
    return 1
  else
    return 0
  fi
}

declare -A dir_for_name
for dir in */*/; do
  [[ -f "${dir}problem.json" ]] || continue
  d=${dir%/}

  name=$(load_name "$d")
  category=$(load_category "$d")

  if is_enabled "$name" "$category"; then
    dir_for_name["$name"]="$d"
  fi
done

IFS=$'\n' sorted_names=($(printf "%s\n" "${!dir_for_name[@]}" | sort))
unset IFS

write "// THIS FILE IS AUTOGENERATED. DO NOT EDIT MANUALLY."
write ""
for name in "${sorted_names[@]}"; do
  dir=${dir_for_name[$name]}
  write "import $name from './$dir/problem.json';"
done

write ""
write "const problems = ["
for name in "${sorted_names[@]}"; do
  write "  $name,"
done
write "];"
write ""
write "export default problems;"

mv "$TMPFILE" "$OUTFILE"
echo "Build succeeded: $OUTFILE"
